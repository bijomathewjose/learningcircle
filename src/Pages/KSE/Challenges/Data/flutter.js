const FlutterStructure = [
  {
    bootcamp: "Basic",
    courseid: 1,
    name: "The Story of me",
    segmentid: 1,
    segments: "",
    segmentKarma: "",
    syllabus: "Variables and Data Types",
    courseLink:
      "https://medium.com/geekculture/dart-programming-tutorial-variables-and-data-types-87440ee1ea94",
    courseLink2: "",
    courseContent: "",
    proofOfWork:
      "Your goal is to create an interactive and user-friendly Dart program that allows users to input their personal information and generates a formatted and visually appealing biodata. The program should prompt the user to enter their name, phone number, age, height, weight, address, and hobbies.",
    proofOfWorkLink: "Github Repo",
    totalKarma: 100,
    hashtags: "#cl-dart-story",
    time: "1 DAYS",
    complexity: "SIMPLE",
    "": "",
  },
  {
    bootcamp: "Basic",
    courseid: 2,
    name: "Sum it Up",
    segmentid: 1,
    segments: "",
    segmentKarma: "",
    syllabus: "String Interpolation and Concatenation",
    courseLink:
      "https://medium.com/geekculture/dart-programming-tutorial-string-interpolation-and-concatenation-c512a6cd9286",
    courseLink2: "",
    courseContent: "",
    proofOfWork:
      'Your goal is to create an interactive and user-friendly Dart program that accepts two numbers from the user as input, calculates their sum, and displays the result in the form of a customized message. The program should prompt the user to enter the numbers and then use string interpolation and the + operator to combine the numbers and the message. The message should display the sum of the two numbers with the format "The sum of [number1] and [number2] is [sum]',
    proofOfWorkLink: "Github Repo",
    totalKarma: 100,
    hashtags: "#cl-dart-sum",
    time: "1 DAYS",
    complexity: "SIMPLE",
    "": "",
  },
  {
    bootcamp: "Basic",
    courseid: 3,
    name: "BasiCulator",
    segmentid: 1,
    segments: "",
    segmentKarma: "",
    syllabus: "Basic Operators and Conditional Statements",
    courseLink:
      "https://medium.com/geekculture/dart-programming-tutorial-basic-operators-663bab979b01",
    courseLink2:
      "https://medium.com/geekculture/dart-programming-tutorial-conditional-statement-72f86dd78004",
    courseContent: "",
    proofOfWork:
      "Your goal is to create an interactive and user-friendly Dart program that allows users to perform basic arithmetic and comparison operations using a calculator interface. The program should include arithmetic operators (+,-,*,/), and comparison operators (==, <, >) for users to input their calculations.",
    proofOfWorkLink: "Github Repo",
    totalKarma: 100,
    hashtags: "#cl-dart-basiculator",
    time: "1 DAYS",
    complexity: "SIMPLE",
    "": "",
  },
  {
    bootcamp: "Basic",
    courseid: 4,
    name: "Sumplier Madness",
    segmentid: 1,
    segments: "",
    segmentKarma: "",
    syllabus: "Loops",
    courseLink:
      "https://medium.com/geekculture/dart-programming-tutorial-loops-6ba26863aafd",
    courseLink2: "",
    courseContent: "",
    proofOfWork:
      "Your goal is to create an engaging and interactive program that helps students learn multiplication tables and practice their mathematical skills. The program should prompt the user to enter a number, generate a multiplication table of the first 10 multiples of that number, and compute the sum of all the numbers in the table.",
    proofOfWorkLink: "Github Repo",
    totalKarma: 100,
    hashtags: "#cl-dart-sumplier",
    time: "2 DAYS",
    complexity: "SIMPLE",
    "": "",
  },
  {
    bootcamp: "Basic",
    courseid: 5,
    name: "Function Fusioner",
    segmentid: 1,
    segments: "",
    segmentKarma: "",
    syllabus: "Functions & Lists",
    courseLink:
      "https://medium.com/geekculture/dart-programming-tutorial-functions-4c37a7e8a674",
    courseLink2:
      "https://medium.com/geekculture/dart-programming-tutorial-collection-types-list-map-and-set-d596d1e7bc78",
    courseContent: "",
    proofOfWork:
      "Your goal is to create a dynamic program that utilizes the power of functions and lists to manipulate and organize data. The program should feature a function that takes in a list of numbers as a parameter and performs a specific operation on each element of the list, such as doubling or squaring each value and print the output",
    proofOfWorkLink: "Github Repo",
    totalKarma: 100,
    hashtags: "#cl-dart-fusioner",
    time: "2 DAYS",
    complexity: "SIMPLE",
    "": "",
  },
  {
    bootcamp: "Basic",
    courseid: 6,
    name: "BIo data Viewer",
    segmentid: 1,
    segments: "",
    segmentKarma: "",
    syllabus:
      "Gain experience in creating a new Flutter app, designing and styling UI, using StatelessWidget and MaterialApp, and showcasing personal information in a visually appealing manner.",
    courseLink: "",
    courseLink2: "",
    courseContent: "",
    proofOfWork:
      "You have been tasked with creating a brand new Flutter app to showcase your personal bio data. Your goal is to create an app that displays your personal information in a sleek and visually appealing manner. To accomplish this task, you must remove the existing code in main.dart and create a new file called 'bio_data.dart' in the lib directory. In this file, you will write code to display your bio data in the app. Once you have completed this step, you will import the 'bio_data.dart' file into the main.dart file and create a new StatelessWidget called 'BioDataPage'. Using the build method of BioDataPage, you will return a widget that displays your bio data. Finally, in the main() method of the main.dart file, you will create an instance of MaterialApp and set the home property to BioDataPage. Save the files and run the app to showcase your personalized bio data to the world!",
    proofOfWorkLink: "Github Repo",
    totalKarma: 100,
    hashtags: "#cl-flutter-countingclick",
    time: "1DAYS",
    complexity: "SIMPLE",
    "": "hashtag to be reviewed",
  },
  {
    bootcamp: "Basic",
    courseid: 7,
    name: "Quizzical Minds",
    segmentid: 1,
    segments: "",
    segmentKarma: "",
    syllabus: "Stateful vs Stateless Widget",
    courseLink:
      "https://medium.com/flutter-community/flutter-stateful-vs-stateless-db325309deae",
    courseLink2: "",
    courseContent: "",
    proofOfWork:
      "Your challenge is to design a dynamic quiz application that engages users and tests their knowledge. The app should utilize a stateless widget to display a question and multiple-choice answers in an organized and visually appealing manner. Once the user selects an answer, the app must use a stateful widget to update the score and proceed to the next question. This requires developing an intuitive and responsive interface that seamlessly transitions between questions while accurately tracking the user's score. The key to creating an effective quiz app is striking a balance between user engagement and functionality, ensuring that the app is both enjoyable and reliable",
    proofOfWorkLink: "Github Repo",
    totalKarma: 200,
    hashtags: "#cl-flutter-quzzical-minds",
    time: "2DAYS",
    complexity: "SIMPLE",
    "": "",
  },
  {
    bootcamp: "Basic",
    courseid: 8,
    name: "Calculating with Style",
    segmentid: 1,
    segments: "",
    segmentKarma: "",
    syllabus:
      "Flutter project setup, UI design, functionality implementation, event handling, responsive design, error handling, and performance optimization.",
    courseLink:
      "https://itnext.io/building-a-calculator-app-in-flutter-824254704fe6",
    courseLink2: "",
    courseContent: "",
    proofOfWork:
      "Your challenge is to design a SIMPLE calculator application that offers basic arithmetic operations while providing users with a beautiful and intuitive user interface. The application should perform mathematical calculations such as addition, subtraction, multiplication, and division, and present the results to users in a clear and visually appealing manner. The app should be designed with user experience in mind, making it easy for users to input numbers and operators, and providing feedback that is both informative and engaging. To achieve a beautiful UI, you will need to consider typography, color schemes, and layout design, ensuring that the app is aesthetically pleasing and easy to navigate.",
    proofOfWorkLink: "Github Repo",
    totalKarma: 200,
    hashtags: "#cl-flutter-calculating-with-style",
    time: "2DAYS",
    complexity: "SIMPLE",
    "": "",
  },
  {
    bootcamp: "Intermediate",
    courseid: 9,
    name: "Vroom Companion",
    segmentid: 2,
    segments: "",
    segmentKarma: "",
    syllabus: "Object oriented programming",
    courseLink:
      "https://medium.com/geekculture/dart-programming-tutorial-object-oriented-programming-using-classes-48be44cbe095",
    courseLink2: "",
    courseContent: "",
    proofOfWork:
      "Your goal is to create a SIMPLE car buying and selling platform using object-oriented programming. There should be two classes for Car and Person.\n• The Car class should have at least the following properties:\n   • name: the name of the car (string).\n   • price: the price of the car (float or integer).\n• The Car class should have a method to change the price.\n• The Person class should have the following properties:\n   • name: the name of the person (string).\n   • ownedCars: a list of Car objects owned by the person.\n   • moneyLeft: the amount of money the person has left (float or integer).\n• The Person class should have methods to buy and sell cars. When a person buys or sells a car, the person's moneyLeft property should be updated accordingly.",
    proofOfWorkLink: "Github Repo",
    totalKarma: 400,
    hashtags: "#cl-dart-vroom",
    time: "3 DAYS",
    complexity: "MEDIUM",
    "": "",
  },
  {
    bootcamp: "Intermediate",
    courseid: 10,
    name: "Lock and Key",
    segmentid: 2,
    segments: "",
    segmentKarma: "",
    syllabus: "Writing Command-Line Utilities with Dart",
    courseLink:
      "https://dart.academy/writing-command-line-utilities-with-dart/",
    courseLink2: "",
    courseContent: "",
    proofOfWork:
      "Build a class that can perform password operations. It should have functions to validate the strength of a password and to generate passwords in three different levels: strong, intermediate, and low.uild a class that can perform password operations. It should have functions to validate the strength of a password and to generate passwords in three different levels: strong, intermediate, and low.",
    proofOfWorkLink: "Github Repo",
    totalKarma: 400,
    hashtags: "#cl-dart-lockandkey",
    time: "3 DAYS",
    complexity: "MEDIUM",
    "": "",
  },
  {
    bootcamp: "Intermediate",
    courseid: 11,
    name: "Vroom Companion",
    segmentid: 2,
    segments: "",
    segmentKarma: "",
    syllabus: "Object oriented programming",
    courseLink:
      "https://medium.com/geekculture/dart-programming-tutorial-object-oriented-programming-using-classes-48be44cbe095",
    courseLink2: "",
    courseContent: "",
    proofOfWork:
      "Your goal is to create a SIMPLE car buying and selling platform using object-oriented programming. There should be two classes for Car and Person.\n• The Car class should have at least the following properties:\n   • name: the name of the car (string).\n   • price: the price of the car (float or integer).\n• The Car class should have a method to change the price.\n• The Person class should have the following properties:\n   • name: the name of the person (string).\n   • ownedCars: a list of Car objects owned by the person.\n   • moneyLeft: the amount of money the person has left (float or integer).\n• The Person class should have methods to buy and sell cars. When a person buys or sells a car, the person's moneyLeft property should be updated accordingly.",
    proofOfWorkLink: "Github Repo",
    totalKarma: 400,
    hashtags: "#cl-dart-vroom",
    time: "3 DAYS",
    complexity: "MEDIUM",
    "": "",
  },
  {
    bootcamp: "Intermediate",
    courseid: 12,
    name: "Lock and Key",
    segmentid: 2,
    segments: "",
    segmentKarma: "",
    syllabus: "Writing Command-Line Utilities with Dart",
    courseLink:
      "https://dart.academy/writing-command-line-utilities-with-dart/",
    courseLink2: "",
    courseContent: "",
    proofOfWork:
      "Build a class that can perform password operations. It should have functions to validate the strength of a password and to generate passwords in three different levels: strong, intermediate, and low.uild a class that can perform password operations. It should have functions to validate the strength of a password and to generate passwords in three different levels: strong, intermediate, and low.",
    proofOfWorkLink: "Github Repo",
    totalKarma: 400,
    hashtags: "#cl-dart-lockandkey",
    time: "3 DAYS",
    complexity: "MEDIUM",
    "": "",
  },
  {
    bootcamp: "Intermediate",
    courseid: 13,
    name: "Vault Guard",
    segmentid: 2,
    segments: "",
    segmentKarma: "",
    syllabus: "Hive and block Concepts",
    courseLink:
      "https://docs.hivedb.dev/#/       https://bloclibrary.dev/#/flutterbloccoreconcepts",
    courseLink2:
      "https://blog.logrocket.com/using-sharedpreferences-in-flutter-to-store-data-locally/",
    courseContent: "",
    proofOfWork: "",
    proofOfWorkLink: "",
    totalKarma: 400,
    hashtags: "",
    time: "3DAYS",
    complexity: "MEDIUM",
    "": "To be reviewed by mentors",
  },
  {
    bootcamp: "Intermediate",
    courseid: 14,
    name: "FlutterAuth",
    segmentid: 2,
    segments: "",
    segmentKarma: "",
    syllabus: "Firebase Login Concepts (Google/ Anonymous Signin)",
    courseLink:
      "https://www.geeksforgeeks.org/user-authentication-and-crud-operation-with-firebase-cloud-firestore-database-in-flutter/",
    courseLink2: "",
    courseContent: "",
    proofOfWork:
      "A mobile application is to be developed using Flutter with Firebase integration for user authentication. The application should allow users to log in using different methods such as guest login, email login, phone login.",
    proofOfWorkLink: "Github Repo",
    totalKarma: 200,
    hashtags: "#cl-firebase-auth",
    time: "3DAYS",
    complexity: "MEDIUM",
    "": "",
  },
  {
    bootcamp: "Intermediate",
    courseid: 15,
    name: "To do with Firebase",
    segmentid: 2,
    segments: "",
    segmentKarma: "",
    syllabus:
      "project and Firebase setup, UI design, functionality implementation, event handling, data modeling, database CRUD operations, Firebase security and authentication, task management features, and backup and restore mechanisms for data protection.",
    courseLink:
      "https://www.geeksforgeeks.org/user-authentication-and-crud-operation-with-firebase-cloud-firestore-database-in-flutter/",
    courseLink2: "",
    courseContent: "",
    proofOfWork:
      "A mobile application is to be developed using Flutter with Firebase integration for managing to-do lists. The application should allow users to create, edit, and delete tasks, set due dates and reminders, and mark tasks as complete. The application should also integrate with Firebase for storing and retrieving tasks. This should include storing tasks securely, retrieving tasks for display, and providing appropriate data backup and restore mechanisms.",
    proofOfWorkLink: "Github Repo",
    totalKarma: 200,
    hashtags: "#cl-firebase-todo",
    time: "3DAYS",
    complexity: "MEDIUM",
    "": "",
  },
  {
    bootcamp: "Intermediate",
    courseid: 16,
    name: "Forecasting with Flutter UI",
    segmentid: 2,
    segments: "",
    segmentKarma: "",
    syllabus: "API",
    courseLink:
      "https://medium.com/nybles/getting-started-with-apis-using-flutter-380db61d9cbb",
    courseLink2: "",
    courseContent: "",
    proofOfWork:
      "Design a mobile application UI for weather forecasting using Flutter. The UI should display the current weather conditions and provide a forecast for the next few DAYS. The UI should be visually appealing, intuitive, and easy to navigate.\n\nThe UI should include the following elements:\n\n1. A header section with the current location and current temperature\n2. An icon or image to represent the current weather condition, such as sunny, cloudy, or rainy\n3. A section displaying the forecast for the next few DAYS, including the date, high and low temperatures, and weather condition icon or image.  The UI should be designed to be responsive and adaptable to different screen sizes and orientations. The UI should also be designed to be scalable, allowing for future enhancements and changes.",
    proofOfWorkLink: "Github Repo",
    totalKarma: 400,
    hashtags: "#cl-flutter-forecast-ui",
    time: "3DAYS",
    complexity: "MEDIUM",
    "": "",
  },
  {
    bootcamp: "Intermediate",
    courseid: 16,
    name: "Forecasting with Flutter and firebase integration",
    segmentid: 2,
    segments: "",
    segmentKarma: "",
    syllabus: "API",
    courseLink:
      "https://medium.com/flutter-community/everything-you-need-to-know-about-json-in-flutter-fb99e31a577f",
    courseLink2: "",
    courseContent: "",
    proofOfWork:
      "To develop a weather forecasting mobile application using Flutter, which integrates with a weather API to display weather information and implements Firebase authentication for user login.",
    proofOfWorkLink: "Github Repo",
    totalKarma: 400,
    hashtags: "#cl-flutter-forecat-inttegrate",
    time: "3DAYS",
    complexity: "MEDIUM",
    "": "",
  },
  {
    bootcamp: "Expert",
    courseid: 17,
    name: "41 coding exercises for Dart on\nExercism. From Raindrops to\nDiamond.",
    segmentid: 3,
    segments: "",
    segmentKarma: "",
    syllabus: "Dart Fundamentals to Expert",
    courseLink: "https://exercism.org/tracks/dart",
    courseLink2: "",
    courseContent: "",
    proofOfWork: "1-10coding exercises for Dart on Exercism",
    proofOfWorkLink: "Exercism",
    totalKarma: 200,
    hashtags: "#cl-dart-exerism-1",
    time: "1 WEEK",
    complexity: "COMPLEX",
    "": "",
  },
  {
    bootcamp: "Expert",
    courseid: 17,
    name: "41 coding exercises for Dart on\nExercism. From Raindrops to\nDiamond.",
    segmentid: 3,
    segments: "",
    segmentKarma: "",
    syllabus: "Dart Fundamentals to Expert",
    courseLink: "https://exercism.org/tracks/dart",
    courseLink2: "",
    courseContent: "",
    proofOfWork: "11-20coding exercises for Dart on Exercism",
    proofOfWorkLink: "Exercism",
    totalKarma: 200,
    hashtags: "#cl-dart-exerism-2",
    time: "2 WEEK",
    complexity: "COMPLEX",
    "": "",
  },
  {
    bootcamp: "Expert",
    courseid: 18,
    name: "41 coding exercises for Dart on\nExercism. From Raindrops to\nDiamond.",
    segmentid: 3,
    segments: "",
    segmentKarma: "",
    syllabus: "Dart Fundamentals to Expert",
    courseLink: "https://exercism.org/tracks/dart",
    courseLink2: "",
    courseContent: "",
    proofOfWork: "21-30coding exercises for Dart on Exercism",
    proofOfWorkLink: "Exercism",
    totalKarma: 200,
    hashtags: "#cl-dart-exerism-3",
    time: "2WEEK",
    complexity: "COMPLEX",
    "": "",
  },
  {
    bootcamp: "Expert",
    courseid: 18,
    name: "41 coding exercises for Dart on\nExercism. From Raindrops to\nDiamond.",
    segmentid: 3,
    segments: "",
    segmentKarma: "",
    syllabus: "Dart Fundamentals to Expert",
    courseLink: "https://exercism.org/tracks/dart",
    courseLink2: "",
    courseContent: "",
    proofOfWork: "31-41coding exercises for Dart on Exercism",
    proofOfWorkLink: "Exercism",
    totalKarma: 200,
    hashtags: "#cl-dart-exerism-4",
    time: "2WEEK",
    complexity: "COMPLEX",
    "": "",
  },
  {
    bootcamp: "Expert",
    courseid: 19,
    name: "Instagram Clone UI",
    segmentid: 3,
    segments: "",
    segmentKarma: "",
    syllabus: "Full Stack App",
    courseLink:
      "https://nickwu241.medium.com/creating-an-instagram-clone-with-flutter-4e81eab2ed69",
    courseLink2: "",
    courseContent: "",
    proofOfWork: "Build a Instagram UI",
    proofOfWorkLink: "Github Repo",
    totalKarma: 800,
    hashtags: "#cl-insta-ui",
    time: "1WEEK",
    complexity: "COMPLEX",
    "": "",
  },
  {
    bootcamp: "Expert",
    courseid: 19,
    name: "Integration of Instagram UI with firebase",
    segmentid: 3,
    segments: "",
    segmentKarma: "",
    syllabus: "Full Stack App",
    courseLink:
      "https://nickwu241.medium.com/creating-an-instagram-clone-with-flutter-4e81eab2ed69",
    courseLink2: "",
    courseContent: "",
    proofOfWork:
      "Make the Instagram UI work the same way as the original, integrate Firebase to login, post, and chat.",
    proofOfWorkLink: "Github Repo",
    totalKarma: 800,
    hashtags: "#cl-insta-connection",
    time: "1WEEK",
    complexity: "COMPLEX",
    "": "",
  },
];
export default FlutterStructure;
